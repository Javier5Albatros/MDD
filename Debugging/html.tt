<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" language="C#" hostspecific="True" #>
<#@ output extension=".txt" #>
<#@ MPJAAMPrototool processor="MPJAAMPrototoolDirectiveProcessor" requires="fileName='Moodle.MPJAAMPrototool'" #>
<#@ include file="EF.utility.CS.ttinclude" #>

<#
	var fileManager = EntityFrameworkTemplateFileManager.Create(this);
	
	fileManager.StartNewFile("index.js");
	addJavascript();

	fileManager.StartNewFile("styles.css");
	addCss();

	var ventanaPrincipal = this.TapizPrototool.VentanaPrincipal;
	fileManager.StartNewFile(ventanaPrincipal.nombre + ".html");
	procesarVentana(ventanaPrincipal);
	foreach(Ventana ventana in this.TapizPrototool.VentanaSecundarium) {
		fileManager.StartNewFile(ventana.nombre+ ".html");
		procesarVentana(ventana);
	}
	fileManager.Process();
	
#>

<#+
	private void procesarVentana(Ventana ventana) {
	WriteLine("<html>");
	addHead(ventana);
		if(ventana is VentanaPrincipal) {
			procesarVentanaPrincipal(ventana);
		} else {
			procesarVentanaSecundaria(ventana);
		}
	WriteLine("</html>");
	}

#>

<#+
	private void procesarVentanaPrincipal(Ventana ventana) {
		addBody(ventana);
	}
#>


<#+
	private void procesarVentanaSecundaria(Ventana ventana) {
		addBody(ventana);
	}
#>

<#+
	string js = @"
		const showMenu = (el) => {
			document.getElementById(el).style.display = 'block';
		}

		const hideMenu = (el) => {
			document.getElementById(el).style.display = 'none';
		}

		const closeApp = () => {
			alert('Fin de la aplicación!');
			window.close();
		}
	";

	private void addJavascript() {
		WriteLine(js);
	}
#>

<#+
	string css = @"
		body {
			font-family: Arial, Helvetica, sans-serif;
		}
		main {
			width: 75%;
			margin: 0 auto;
			background-color: #efeeee;
		}

		.menu, .footer {
			background-color: rgb(19 32 70);
		}

		main h1 {
			display: inline-block;
			width: 100%;
			text-align: center;
		}

		.dropbtn {
			background-color: #04AA6D;
			color: white;
			padding: 16px;
			font-size: 16px;
			border: none;
			margin: 10px;
		}

		.dropdown-content {
			display: none;
			position: absolute;
			background-color: #efeeee;
			min-width: 160px;
			box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
			z-index: 1;
		}

		.item-menu {
			color: black;
			padding: 12px 16px;
			text-decoration: none;
			display: block;
		}

		.boton {
			cursor: pointer;
			padding: 15px;
			display: inline-block;
			margin: 10px;
			color: white;
			border-radius: 10px;
			background-color: #1f35bb;
		}

		.crimson {
			background-color: crimson;
		}

		.content {
			padding: 15px;
		}

		.footer {
			padding: 15px;
			display: flex;
			justify-content: space-between;
		}

		.footer div {
			
		}

		.footer p {
			display: inline-block;
			color: white;
			margin: 2px;
		}


		";
	private void addCss() {
		WriteLine(css);
	}
#>

<#+
	private void addHead(Ventana ventana) {
		string head = String.Format(@"
		<head> 
			<title>{0}</title>
			<link rel='stylesheet' href='styles.css'>
			<script type='text/javascript' src='index.js'></script>
		</head>", ventana.nombre);
		WriteLine(head);
	}
#>

<#+
	private void addBody(Ventana ventana) {
	WriteLine("<body>");
		WriteLine("<main>");
			WriteLine("<h1>" + ventana.nombre + "</h1>");
			addMenus(ventana);
			addContent(ventana);
			addButtons(ventana);
			footer();
		WriteLine("</main>");
	WriteLine("</body>");
	}
#>

<#+
	private void addMenus(Ventana ventana) {
		if(ventana.Menus.Count != 0) {
			foreach(Menu menu in ventana.Menus) {
				printMenu(menu);
			}	
		}
	}
#>

<#+
	private void addButtons(Ventana ventana) {
		if(ventana.Botons.Count != 0) {
			WriteLine("<section class='botones'>");
			foreach(Boton boton in ventana.Botons) {
				WriteLine(itemNavegacion(boton));
			}
			WriteLine("</section>");
		}
	}
#>

<#+
	private void printMenu(Menu menu) {
		WriteLine("<section class='menu'>");
		WriteLine("<button class='dropbtn' onmouseover='showMenu(\"" + menu.TituloMenu +"\")'> " + menu.TituloMenu + "</button> </div>");
		WriteLine("<div class='dropdown-content' id='"+ menu.TituloMenu+ "' onmouseleave='hideMenu(\"" + menu.TituloMenu +"\")' >");
		foreach(ItemMenu item in menu.ItemMenus) {
			WriteLine(itemNavegacion(item));
		}
		WriteLine("</div>");
		WriteLine("</section>");
	}
#>

<#+
	private string itemNavegacion(ItemNavegacion item) {
	string clase = (item is ItemMenu) ? "item-menu" : "boton";

	if(item.Ventana != null) {
		return String.Format(@"
			<a href='{0}' class='{1}'>
				{2}
			</a>
		", item.Ventana.nombre + ".html", clase, item.titulo);
	} else {
		return String.Format(@"
			<a class='{0} crimson' onclick='closeApp()'>
				{1}
			</a>
		", clase, item.titulo);
		}
	}
#>

<#+
	private void addContent(Ventana ventana) {
		WriteLine("<section class='content'>");
		WriteLine(String.Format("<h3 class='titulo'>{0}</h3>", ventana.titulo));
		WriteLine(String.Format("<p class='contenido'>{0}</p>", ventana.contenido));
		WriteLine("</section>");
	}
#>

<#+
	private void footer() {
		WriteLine(@"<footer class='footer'>
			<p>Javier Álvarez, Alonso Monasterio, Miguel Pérez</p>
			<p>IPS, 2021-2022</p>
		</footer>");
	}
#>