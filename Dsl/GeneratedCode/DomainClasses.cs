//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass TapizPrototool
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.TapizPrototool.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.TapizPrototool.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7715216c-dff0-4b15-813b-df20ee115cd1")]
	public partial class TapizPrototool : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizPrototool domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7715216c, 0xdff0, 0x4b15, 0x81, 0x3b, 0xdf, 0x20, 0xee, 0x11, 0x5c, 0xd1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizPrototool(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizPrototool(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombreAplicacion domain property code
		
		/// <summary>
		/// nombreAplicacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreAplicacionDomainPropertyId = new global::System.Guid(0x65d1f014, 0x86c3, 0x432f, 0xbc, 0x9d, 0x9b, 0x82, 0x3e, 0x9a, 0xf1, 0x6b);
		
		/// <summary>
		/// Storage for nombreAplicacion
		/// </summary>
		private global::System.String nombreAplicacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombreAplicacion domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.TapizPrototool.Nombre Aplicacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.TapizPrototool/nombreAplicacion.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.TapizPrototool/nombreAplicacion.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("65d1f014-86c3-432f-bc9d-9b823e9af16b")]
		public global::System.String nombreAplicacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreAplicacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombreAplicacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TapizPrototool.nombreAplicacion domain property.
		/// </summary>
		internal sealed partial class nombreAplicacionPropertyHandler : DslModeling::DomainPropertyValueHandler<TapizPrototool, global::System.String>
		{
			private nombreAplicacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TapizPrototool.nombreAplicacion domain property value handler.
			/// </summary>
			public static readonly nombreAplicacionPropertyHandler Instance = new nombreAplicacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TapizPrototool.nombreAplicacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreAplicacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TapizPrototool element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreAplicacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TapizPrototool element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreAplicacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
