//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass TapizPrototool
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.TapizPrototool.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.TapizPrototool.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7715216c-dff0-4b15-813b-df20ee115cd1")]
	public partial class TapizPrototool : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizPrototool domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7715216c, 0xdff0, 0x4b15, 0x81, 0x3b, 0xdf, 0x20, 0xee, 0x11, 0x5c, 0xd1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizPrototool(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizPrototool(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombreAplicacion domain property code
		
		/// <summary>
		/// nombreAplicacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreAplicacionDomainPropertyId = new global::System.Guid(0x65d1f014, 0x86c3, 0x432f, 0xbc, 0x9d, 0x9b, 0x82, 0x3e, 0x9a, 0xf1, 0x6b);
		
		/// <summary>
		/// Storage for nombreAplicacion
		/// </summary>
		private global::System.String nombreAplicacionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombreAplicacion domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.TapizPrototool.Nombre Aplicacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.TapizPrototool/nombreAplicacion.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.TapizPrototool/nombreAplicacion.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("65d1f014-86c3-432f-bc9d-9b823e9af16b")]
		public global::System.String nombreAplicacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreAplicacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombreAplicacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TapizPrototool.nombreAplicacion domain property.
		/// </summary>
		internal sealed partial class nombreAplicacionPropertyHandler : DslModeling::DomainPropertyValueHandler<TapizPrototool, global::System.String>
		{
			private nombreAplicacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TapizPrototool.nombreAplicacion domain property value handler.
			/// </summary>
			public static readonly nombreAplicacionPropertyHandler Instance = new nombreAplicacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TapizPrototool.nombreAplicacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreAplicacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TapizPrototool element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreAplicacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TapizPrototool element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreAplicacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VentanaPrincipal opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaPrincipal.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.TapizPrototool
		/// </summary>
		public virtual VentanaPrincipal VentanaPrincipal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.TapizPrototoolDomainRoleId) as VentanaPrincipal;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.TapizPrototoolDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaSecundarium opposite domain role accessor
		
		/// <summary>
		/// Gets a list of VentanaSecundarium.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.TapizPrototool
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<VentanaSecundaria> VentanaSecundarium
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<VentanaSecundaria>, VentanaSecundaria>(global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.TapizPrototoolDomainRoleId);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFin.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.TapizPrototool
		/// </summary>
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.TapizPrototoolDomainRoleId) as EstadoFin;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.TapizPrototoolDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MPJAAMPrototool.VentanaPrincipal.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: TapizPrototoolHasVentanaPrincipal.VentanaPrincipal
					if (this.VentanaPrincipal != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MPJAAMPrototool.VentanaSecundaria.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MPJAAMPrototool.EstadoFin.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: TapizPrototoolHasEstadoFin.EstadoFin
					if (this.EstadoFin != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MPJAAMPrototool.VentanaPrincipal sourceVentanaPrincipal1 = sourceElement as global::UPM_IPS.MPJAAMPrototool.VentanaPrincipal;
			if (sourceVentanaPrincipal1 != null)
			{
				// Create link for path TapizPrototoolHasVentanaPrincipal.VentanaPrincipal
				this.VentanaPrincipal = sourceVentanaPrincipal1;

				return;
			}
				
			global::UPM_IPS.MPJAAMPrototool.VentanaSecundaria sourceVentanaSecundaria2 = sourceElement as global::UPM_IPS.MPJAAMPrototool.VentanaSecundaria;
			if (sourceVentanaSecundaria2 != null)
			{
				// Create link for path TapizPrototoolHasVentanaSecundarium.VentanaSecundarium
				this.VentanaSecundarium.Add(sourceVentanaSecundaria2);

				return;
			}
				
			global::UPM_IPS.MPJAAMPrototool.EstadoFin sourceEstadoFin3 = sourceElement as global::UPM_IPS.MPJAAMPrototool.EstadoFin;
			if (sourceEstadoFin3 != null)
			{
				// Create link for path TapizPrototoolHasEstadoFin.EstadoFin
				this.EstadoFin = sourceEstadoFin3;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MPJAAMPrototool.VentanaPrincipal sourceVentanaPrincipal1 = sourceElement as global::UPM_IPS.MPJAAMPrototool.VentanaPrincipal;
			if (sourceVentanaPrincipal1 != null)
			{
				// Delete link for path TapizPrototoolHasVentanaPrincipal.VentanaPrincipal
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.GetLinks((global::UPM_IPS.MPJAAMPrototool.TapizPrototool)this, sourceVentanaPrincipal1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.TapizPrototoolDomainRoleId, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.VentanaPrincipalDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.MPJAAMPrototool.VentanaSecundaria sourceVentanaSecundaria2 = sourceElement as global::UPM_IPS.MPJAAMPrototool.VentanaSecundaria;
			if (sourceVentanaSecundaria2 != null)
			{
				// Delete link for path TapizPrototoolHasVentanaSecundarium.VentanaSecundarium
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.GetLinks((global::UPM_IPS.MPJAAMPrototool.TapizPrototool)this, sourceVentanaSecundaria2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.TapizPrototoolDomainRoleId, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.VentanaSecundariaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.MPJAAMPrototool.EstadoFin sourceEstadoFin3 = sourceElement as global::UPM_IPS.MPJAAMPrototool.EstadoFin;
			if (sourceEstadoFin3 != null)
			{
				// Delete link for path TapizPrototoolHasEstadoFin.EstadoFin
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.GetLinks((global::UPM_IPS.MPJAAMPrototool.TapizPrototool)this, sourceEstadoFin3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.TapizPrototoolDomainRoleId, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.EstadoFinDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass Ventana
	/// Description for UPM_IPS.MPJAAMPrototool.Ventana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("163f86dd-d69b-4142-abb2-ee5c55283e68")]
	public abstract partial class Ventana : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Ventana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x163f86dd, 0xd69b, 0x4142, 0xab, 0xb2, 0xee, 0x5c, 0x55, 0x28, 0x3e, 0x68);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Ventana(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x83765669, 0x91dd, 0x4f0c, 0x83, 0xcd, 0x5a, 0xfa, 0x2a, 0x03, 0xea, 0x8b);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/nombre.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/nombre.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("83765669-91dd-4f0c-83cd-5afa2a03ea8b")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ancho domain property code
		
		/// <summary>
		/// ancho domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoDomainPropertyId = new global::System.Guid(0xcb743062, 0x552e, 0x4275, 0xb2, 0x01, 0xa1, 0xb8, 0xe6, 0x7d, 0x23, 0xcf);
		
		/// <summary>
		/// Storage for ancho
		/// </summary>
		private global::System.Int16 anchoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ancho domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Ancho
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/ancho.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/ancho.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("cb743062-552e-4275-b201-a1b8e67d23cf")]
		public global::System.Int16 ancho
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				anchoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.ancho domain property.
		/// </summary>
		internal sealed partial class anchoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int16>
		{
			private anchoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.ancho domain property value handler.
			/// </summary>
			public static readonly anchoPropertyHandler Instance = new anchoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.ancho domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.anchoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.anchoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region altura domain property code
		
		/// <summary>
		/// altura domain property Id.
		/// </summary>
		public static readonly global::System.Guid alturaDomainPropertyId = new global::System.Guid(0xa60bc0ed, 0x9f48, 0x444b, 0xba, 0x80, 0x7f, 0xdb, 0x90, 0x22, 0xbe, 0x09);
		
		/// <summary>
		/// Storage for altura
		/// </summary>
		private global::System.Int16 alturaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of altura domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Altura
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/altura.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/altura.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a60bc0ed-9f48-444b-ba80-7fdb9022be09")]
		public global::System.Int16 altura
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return alturaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				alturaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.altura domain property.
		/// </summary>
		internal sealed partial class alturaPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int16>
		{
			private alturaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.altura domain property value handler.
			/// </summary>
			public static readonly alturaPropertyHandler Instance = new alturaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.altura domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return alturaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.alturaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.alturaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region nombreCalculado domain property code
		
		/// <summary>
		/// nombreCalculado domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreCalculadoDomainPropertyId = new global::System.Guid(0xe7ea94b0, 0x9ac8, 0x4c02, 0xbf, 0x60, 0xf1, 0x1c, 0x29, 0xb6, 0x89, 0x24);
		
		/// <summary>
		/// Gets or sets the value of nombreCalculado domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Nombre Calculado
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/nombreCalculado.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/nombreCalculado.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("e7ea94b0-9ac8-4c02-bf60-f11c29b68924")]
		public global::System.String nombreCalculado
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreCalculadoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombreCalculado domain property.
		/// </summary>
		internal sealed partial class nombreCalculadoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Ventana, global::System.String>
		{
			private nombreCalculadoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombreCalculado domain property value handler.
			/// </summary>
			public static readonly nombreCalculadoPropertyHandler Instance = new nombreCalculadoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombreCalculado domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreCalculadoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for nombreCalculado because its Kind is
				// set to Calculated. Please provide the GetnombreCalculadoValue()
				// method on the domain class.
				return element.GetnombreCalculadoValue();
			}
		
		}
		
		#endregion
		#region dimensionesCalculado domain property code
		
		/// <summary>
		/// dimensionesCalculado domain property Id.
		/// </summary>
		public static readonly global::System.Guid dimensionesCalculadoDomainPropertyId = new global::System.Guid(0xb39ddbcd, 0x64b3, 0x4542, 0x9a, 0x6a, 0xe6, 0xc6, 0x12, 0x58, 0xa2, 0xe0);
		
		/// <summary>
		/// Gets or sets the value of dimensionesCalculado domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Dimensiones Calculado
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/dimensionesCalculado.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/dimensionesCalculado.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("b39ddbcd-64b3-4542-9a6a-e6c61258a2e0")]
		public global::System.String dimensionesCalculado
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return dimensionesCalculadoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.dimensionesCalculado domain property.
		/// </summary>
		internal sealed partial class dimensionesCalculadoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Ventana, global::System.String>
		{
			private dimensionesCalculadoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.dimensionesCalculado domain property value handler.
			/// </summary>
			public static readonly dimensionesCalculadoPropertyHandler Instance = new dimensionesCalculadoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.dimensionesCalculado domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return dimensionesCalculadoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for dimensionesCalculado because its Kind is
				// set to Calculated. Please provide the GetdimensionesCalculadoValue()
				// method on the domain class.
				return element.GetdimensionesCalculadoValue();
			}
		
		}
		
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x63458279, 0x4867, 0x4c2b, 0xa1, 0xf9, 0xff, 0x4e, 0x3b, 0x86, 0x6d, 0x98);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/titulo.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/titulo.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("63458279-4867-4c2b-a1f9-ff4e3b866d98")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region contenido domain property code
		
		/// <summary>
		/// contenido domain property Id.
		/// </summary>
		public static readonly global::System.Guid contenidoDomainPropertyId = new global::System.Guid(0xb78ef4b5, 0x717b, 0x4b59, 0x88, 0x0e, 0x7d, 0x9e, 0x08, 0xfa, 0xa7, 0x7b);
		
		/// <summary>
		/// Storage for contenido
		/// </summary>
		private global::System.String contenidoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of contenido domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Ventana.Contenido
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Ventana/contenido.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Ventana/contenido.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b78ef4b5-717b-4b59-880e-7d9e08faa77b")]
		public global::System.String contenido
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return contenidoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				contenidoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.contenido domain property.
		/// </summary>
		internal sealed partial class contenidoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private contenidoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.contenido domain property value handler.
			/// </summary>
			public static readonly contenidoPropertyHandler Instance = new contenidoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.contenido domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return contenidoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.contenidoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.contenidoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Menus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menus.
		/// Description for UPM_IPS.MPJAAMPrototool.VentanaHasMenus.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.MPJAAMPrototool.VentanaHasMenus.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Botons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Botons.
		/// Description for UPM_IPS.MPJAAMPrototool.VentanaHasBotons.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Botons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.MPJAAMPrototool.VentanaHasBotons.VentanaDomainRoleId);
			}
		}
		#endregion
		#region ItemNavegacioned opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemNavegacioned.
		/// Description for UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesVentana.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemNavegacion> ItemNavegacioned
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemNavegacion>, ItemNavegacion>(global::UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesVentana.VentanaDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MPJAAMPrototool.Boton.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MPJAAMPrototool.Menu.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MPJAAMPrototool.Boton sourceBoton1 = sourceElement as global::UPM_IPS.MPJAAMPrototool.Boton;
			if (sourceBoton1 != null)
			{
				// Create link for path VentanaHasBotons.Botons
				this.Botons.Add(sourceBoton1);

				return;
			}
				
			global::UPM_IPS.MPJAAMPrototool.Menu sourceMenu2 = sourceElement as global::UPM_IPS.MPJAAMPrototool.Menu;
			if (sourceMenu2 != null)
			{
				// Create link for path VentanaHasMenus.Menus
				this.Menus.Add(sourceMenu2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MPJAAMPrototool.Boton sourceBoton1 = sourceElement as global::UPM_IPS.MPJAAMPrototool.Boton;
			if (sourceBoton1 != null)
			{
				// Delete link for path VentanaHasBotons.Botons
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MPJAAMPrototool.VentanaHasBotons.GetLinks((global::UPM_IPS.MPJAAMPrototool.Ventana)this, sourceBoton1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MPJAAMPrototool.VentanaHasBotons.VentanaDomainRoleId, global::UPM_IPS.MPJAAMPrototool.VentanaHasBotons.BotonDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.MPJAAMPrototool.Menu sourceMenu2 = sourceElement as global::UPM_IPS.MPJAAMPrototool.Menu;
			if (sourceMenu2 != null)
			{
				// Delete link for path VentanaHasMenus.Menus
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MPJAAMPrototool.VentanaHasMenus.GetLinks((global::UPM_IPS.MPJAAMPrototool.Ventana)this, sourceMenu2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MPJAAMPrototool.VentanaHasMenus.VentanaDomainRoleId, global::UPM_IPS.MPJAAMPrototool.VentanaHasMenus.MenuDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass VentanaPrincipal
	/// Description for UPM_IPS.MPJAAMPrototool.VentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.VentanaPrincipal.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("90e96a9e-4ba2-4b8c-87bc-69070af1dee8")]
	public partial class VentanaPrincipal : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x90e96a9e, 0x4ba2, 0x4b8c, 0x87, 0xbc, 0x69, 0x07, 0x0a, 0xf1, 0xde, 0xe8);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TapizPrototool opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizPrototool.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.VentanaPrincipal
		/// </summary>
		public virtual TapizPrototool TapizPrototool
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.VentanaPrincipalDomainRoleId) as TapizPrototool;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaPrincipal.VentanaPrincipalDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass VentanaSecundaria
	/// Description for UPM_IPS.MPJAAMPrototool.VentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.VentanaSecundaria.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8dd90412-52e1-415b-94d5-d7db3ef18623")]
	public partial class VentanaSecundaria : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8dd90412, 0x52e1, 0x415b, 0x94, 0xd5, 0xd7, 0xdb, 0x3e, 0xf1, 0x86, 0x23);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region modal domain property code
		
		/// <summary>
		/// modal domain property Id.
		/// </summary>
		public static readonly global::System.Guid modalDomainPropertyId = new global::System.Guid(0x7fc1921b, 0xe289, 0x4f2b, 0x9b, 0xa0, 0xc2, 0xe1, 0xb8, 0x2d, 0x0f, 0x71);
		
		/// <summary>
		/// Storage for modal
		/// </summary>
		private global::System.Boolean modalPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modal domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.VentanaSecundaria.Modal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.VentanaSecundaria/modal.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.VentanaSecundaria/modal.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7fc1921b-e289-4f2b-9ba0-c2e1b82d0f71")]
		public global::System.Boolean modal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modalPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modalPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.modal domain property.
		/// </summary>
		internal sealed partial class modalPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.Boolean>
		{
			private modalPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.modal domain property value handler.
			/// </summary>
			public static readonly modalPropertyHandler Instance = new modalPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.modal domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modalDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modalPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modalPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TapizPrototool opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizPrototool.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.VentanaSecundaria
		/// </summary>
		public virtual TapizPrototool TapizPrototool
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.VentanaSecundariaDomainRoleId) as TapizPrototool;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasVentanaSecundarium.VentanaSecundariaDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass Menu
	/// Description for UPM_IPS.MPJAAMPrototool.Menu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Menu.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Menu.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("1b2f3583-8181-485c-80d0-e2a3621f022f")]
	public partial class Menu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Menu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1b2f3583, 0x8181, 0x485c, 0x80, 0xd0, 0xe2, 0xa3, 0x62, 0x1f, 0x02, 0x2f);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TituloMenu domain property code
		
		/// <summary>
		/// TituloMenu domain property Id.
		/// </summary>
		public static readonly global::System.Guid TituloMenuDomainPropertyId = new global::System.Guid(0x2bbc406f, 0x8b3c, 0x4489, 0x83, 0x64, 0xfa, 0x38, 0x89, 0x42, 0x88, 0x8a);
		
		/// <summary>
		/// Storage for TituloMenu
		/// </summary>
		private global::System.String tituloMenuPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TituloMenu domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.Menu.Titulo Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Menu/TituloMenu.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Menu/TituloMenu.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2bbc406f-8b3c-4489-8364-fa388942888a")]
		public global::System.String TituloMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloMenuPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TituloMenuPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Menu.TituloMenu domain property.
		/// </summary>
		internal sealed partial class TituloMenuPropertyHandler : DslModeling::DomainPropertyValueHandler<Menu, global::System.String>
		{
			private TituloMenuPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Menu.TituloMenu domain property value handler.
			/// </summary>
			public static readonly TituloMenuPropertyHandler Instance = new TituloMenuPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Menu.TituloMenu domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TituloMenuDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Menu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloMenuPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Menu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloMenuPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.MPJAAMPrototool.VentanaHasMenus.Menu
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.VentanaHasMenus.MenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.VentanaHasMenus.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.MenuDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MPJAAMPrototool.ItemMenu.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MPJAAMPrototool.ItemMenu sourceItemMenu1 = sourceElement as global::UPM_IPS.MPJAAMPrototool.ItemMenu;
			if (sourceItemMenu1 != null)
			{
				// Create link for path MenuHasItemMenus.ItemMenus
				this.ItemMenus.Add(sourceItemMenu1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MPJAAMPrototool.ItemMenu sourceItemMenu1 = sourceElement as global::UPM_IPS.MPJAAMPrototool.ItemMenu;
			if (sourceItemMenu1 != null)
			{
				// Delete link for path MenuHasItemMenus.ItemMenus
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.GetLinks((global::UPM_IPS.MPJAAMPrototool.Menu)this, sourceItemMenu1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.MenuDomainRoleId, global::UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.ItemMenuDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass ItemNavegacion
	/// Description for UPM_IPS.MPJAAMPrototool.ItemNavegacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.ItemNavegacion.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.ItemNavegacion.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8da0fe0e-bbf8-481b-828d-73413e37bf32")]
	public abstract partial class ItemNavegacion : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemNavegacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8da0fe0e, 0xbbf8, 0x481b, 0x82, 0x8d, 0x73, 0x41, 0x3e, 0x37, 0xbf, 0x32);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected ItemNavegacion(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x3f0a80c0, 0x3ef6, 0x4da2, 0xa7, 0xa6, 0x5b, 0xb1, 0x17, 0x64, 0x02, 0x66);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.MPJAAMPrototool.ItemNavegacion.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.ItemNavegacion/titulo.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.ItemNavegacion/titulo.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3f0a80c0-3ef6-4da2-a7a6-5bb117640266")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ItemNavegacion.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<ItemNavegacion, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ItemNavegacion.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ItemNavegacion.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ItemNavegacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ItemNavegacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesVentana.ItemNavegacion
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesVentana.ItemNavegacionDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesVentana.ItemNavegacionDomainRoleId, value);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFin.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesEstadoFin.ItemNavegacion
		/// </summary>
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesEstadoFin.ItemNavegacionDomainRoleId) as EstadoFin;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesEstadoFin.ItemNavegacionDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass ItemMenu
	/// Description for UPM_IPS.MPJAAMPrototool.ItemMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.ItemMenu.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.ItemMenu.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("360082db-252f-4bf1-82f0-b4b4193b5721")]
	public partial class ItemMenu : ItemNavegacion
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x360082db, 0x252f, 0x4bf1, 0x82, 0xf0, 0xb4, 0xb4, 0x19, 0x3b, 0x57, 0x21);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Menu opposite domain role accessor
		/// <summary>
		/// Gets or sets Menu.
		/// Description for UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.ItemMenu
		/// </summary>
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.ItemMenuDomainRoleId) as Menu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.MenuHasItemMenus.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass Boton
	/// Description for UPM_IPS.MPJAAMPrototool.Boton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.Boton.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.Boton.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("408ecdb3-c92b-4acb-a2f6-13c8b98e17d7")]
	public partial class Boton : ItemNavegacion
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Boton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x408ecdb3, 0xc92b, 0x4acb, 0xa2, 0xf6, 0x13, 0xc8, 0xb9, 0x8e, 0x17, 0xd7);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region VentanaBoton opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaBoton.
		/// Description for UPM_IPS.MPJAAMPrototool.VentanaHasBotons.Boton
		/// </summary>
		public virtual Ventana VentanaBoton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.VentanaHasBotons.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.VentanaHasBotons.BotonDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MPJAAMPrototool
{
	/// <summary>
	/// DomainClass EstadoFin
	/// Description for UPM_IPS.MPJAAMPrototool.EstadoFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MPJAAMPrototool.EstadoFin.DisplayName", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MPJAAMPrototool.EstadoFin.Description", typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel), "UPM_IPS.MPJAAMPrototool.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MPJAAMPrototool.MPJAAMPrototoolDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("77dfd0bb-b447-4434-a513-3975dbc65cd4")]
	public partial class EstadoFin : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstadoFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x77dfd0bb, 0xb447, 0x4434, 0xa5, 0x13, 0x39, 0x75, 0xdb, 0xc6, 0x5c, 0xd4);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TapizPrototool opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizPrototool.
		/// Description for UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.EstadoFin
		/// </summary>
		public virtual TapizPrototool TapizPrototool
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.EstadoFinDomainRoleId) as TapizPrototool;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MPJAAMPrototool.TapizPrototoolHasEstadoFin.EstadoFinDomainRoleId, value);
			}
		}
		#endregion
		#region ItemNavegacioned opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemNavegacioned.
		/// Description for
		/// UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesEstadoFin.EstadoFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemNavegacion> ItemNavegacioned
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemNavegacion>, ItemNavegacion>(global::UPM_IPS.MPJAAMPrototool.ItemNavegacionReferencesEstadoFin.EstadoFinDomainRoleId);
			}
		}
		#endregion
	}
}
